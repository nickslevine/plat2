// Test basic inheritance without generics first

// Base class
class Animal {
  let name: string;
  var age: i32;

  init(name: string, age: i32) -> Animal {
    self.name = name;
    self.age = age;
    return self;
  }

  virtual fn make_sound() -> string {
    return "Generic animal sound";
  }

  fn get_info() -> string {
    return "${self.name} is ${self.age} years old";
  }
}

// Derived class
class Dog : Animal {
  let breed: string;

  init(name: string, age: i32, breed: string) -> Dog {
    super.init(name, age);
    self.breed = breed;
    return self;
  }

  override fn make_sound() -> string {
    return "Woof!";
  }

  fn get_breed() -> string {
    return self.breed;
  }
}

fn main() -> i32 {
  let animal = Animal(name = "Generic", age = 5);
  let dog = Dog(name = "Buddy", age = 3, breed = "Golden Retriever");

  print("Animal info: ${animal.get_info()}");
  print("Animal sound: ${animal.make_sound()}");

  print("Dog info: ${dog.get_info()}");
  print("Dog sound: ${dog.make_sound()}");
  print("Dog breed: ${dog.get_breed()}");

  return 0;
}