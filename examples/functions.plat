// Example: Function definitions and calls
fn add(a: Int32, b: Int32) -> Int32 {
  return a + b;
}

fn multiply(x: Int32, y: Int32) -> Int32 {
  return x * y;
}

fn calculate(a: Int32, b: Int32, c: Int32) -> Int32 {
  let sum: Int32 = add(a = a, b = b);
  let product: Int32 = multiply(x = sum, y = c);
  return product;
}

fn main() -> Int32 {
  print(value = "Testing functions...");

  let result1: Int32 = add(a = 5, b = 3);
  let result2: Int32 = multiply(x = 4, y = 7);
  let result3: Int32 = calculate(a = 2, b = 3, c = 4);  // (2 + 3) * 4 = 20

  print(value = "Addition works!");
  print(value = "Multiplication works!");
  print(value = "Nested function calls work!");

  return 0;
}