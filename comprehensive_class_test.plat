class Point {
  let x: i32;
  let y: i32;
  var name: string;

  init(x: i32, y: i32, name: string) -> Point {
    self.x = x;
    self.y = y;
    self.name = name;
    return self;
  }
  fn add(other: Point) -> Point {
    return Point(x = self.x + other.x, y = self.y + other.y, name = "sum");
  }
  fn change_name(new_name: string) {
    self.name = new_name;
  }
  fn get_magnitude() -> i32 {
    return self.x * self.x + self.y * self.y;
  }
}

class Vector<T> {
  let data: T;
  var size: i32;

  init(data: T, size: i32) {
    self.data = data;
    self.size = size;
  }
  mut fn resize(new_size: i32) {
    self.size = new_size;
  }
}

fn main() {
  let p1 = Point(x = 10, y = 20, name = "first");
  let p2 = Point(x = 5, y = 15, name = "second");
  let sum = p1.add(p2);
  print("Point 1: (${p1.x}, ${p1.y}) named '${p1.name}'");
  print("Point 2: (${p2.x}, ${p2.y}) named '${p2.name}'");
  print("Sum: (${sum.x}, ${sum.y}) named '${sum.name}'");
  sum.change_name("result");
  print("Sum after rename: (${sum.x}, ${sum.y}) named '${sum.name}'");
  let magnitude = p1.get_magnitude();
  print("P1 magnitude: ${magnitude}");
}
